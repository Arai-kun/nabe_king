{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/mail/mail.component.ts","./src/app/mail/mail.component.html","./src/app/data/data.component.ts","./src/app/data/data.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/auth/auth.component.ts","./src/app/config/config.component.ts","./src/app/config/config.component.html","./src/app/mail.service.ts","./src/app/forgot/forgot.component.ts","./src/app/forgot/forgot.component.html","./src/app/navi/navi.component.ts","./src/app/navi/navi.component.html","./src/app/file.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/reset/reset.component.ts","./src/app/reset/reset.component.html","./src/app/app.module.ts","./src/app/dialog/dialog.component.ts","./src/app/dialog/dialog.component.html","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/auth.service.ts","./src/app/delete/delete.component.ts","./src/app/delete/delete.component.html","./src/app/dialog2/dialog2.component.ts","./src/app/dialog2/dialog2.component.html","./src/app/db.service.ts","./src/app/overlay-spinner.service.ts","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./src/app/can-deactivate-guard.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { DbService } from '../db.service';\nimport { user } from '../user';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { OverlaySpinnerService } from '../overlay-spinner.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  user: user = {\n    email: \"\",\n    password: \"\",\n    seller_partner_id: \"\",\n    refresh_token: \"\",\n    access_token: \"\"\n  };\n  form!: FormGroup;\n  emailControl = new FormControl(null, [\n    Validators.required,\n    Validators.email\n  ]);\n  passwordControl = new FormControl(null, Validators.required);\n  password2Control = new FormControl(null, Validators.required);\n\n\n  constructor(\n    private dbService: DbService,\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    private overlaySpinnerService: OverlaySpinnerService,\n    private toastrService: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      email: this.emailControl,\n      password: this.passwordControl,\n      password2: this.password2Control\n    });\n  }\n\n  onSubmit() {\n    this.user.email = this.form.get('email')?.value; \n    this.user.password = this.form.get('password')?.value;\n    if(this.user.password !== this.form.get('password2')?.value){\n      this.toastrService.error('パスワードが一致しません', '', {positionClass: 'toast-bottom-center', timeOut: 5000, closeButton: true});\n      this.form.get('password')?.setValue(null);\n      this.form.get('password2')?.setValue(null);\n      return;\n    }\n    else{\n      this.overlaySpinnerService.attach();\n      this.authService.userExist(this.user.email)\n      .subscribe(exist => {\n        if(exist){\n          this.overlaySpinnerService.detach();\n          this.toastrService.error('このメールアドレスは既に登録済みです', '登録失敗', { positionClass: 'toast-bottom-center', timeOut: 5000, closeButton: true});\n          //this.router.navigate(['login']);\n        }\n        else{\n          this.authService.createUser(this.user)\n          .subscribe(() => {\n            this.authService.login(this.user)\n            .subscribe(() => {\n              this.overlaySpinnerService.detach();\n              this.router.navigate(['auth']);\n            });\n          });\n        }\n      });\n    }\n  }\n}\n","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <mat-card class=\"box\">\n      <p class=\"img_logo\">\n        <img src=\"https://res.cloudinary.com/dctfqlyj9/image/upload/v1643959198/icons8-starfish-96_gzopmn.png\"/>\n      </p>\n      <mat-card-header>\n        <mat-card-title>楽コメ</mat-card-title>\n        <mat-card-subtitle>～RakuComeRakuCome～</mat-card-subtitle>\n      </mat-card-header>\n  \n      <form class=\"example-form\" [formGroup]=\"form\" novalidate (ngSubmit)=\"onSubmit()\">\n  \n        <mat-card-content>\n\n          <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"メールアドレス\" type=\"email\" name=\"email\" formControlName=\"email\">\n            <mat-error *ngIf=\"emailControl.hasError('required') || emailControl.hasError('email')\">\n                <strong>メールアドレスを入力してください</strong>\n            </mat-error>\n          </mat-form-field>\n  \n          <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"パスワード\" type=\"password\" name=\"password\" formControlName=\"password\" autocomplete=\"off\">\n            <mat-error *ngIf=\"passwordControl.hasError('required')\">\n                <strong>パスワードを入力してください</strong>\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"パスワード(確認)\" type=\"password\" name=\"password2\" formControlName=\"password2\" autocomplete=\"off\">\n            <mat-error *ngIf=\"password2Control.hasError('required')\">\n                <strong>パスワード(確認)を入力してください</strong>\n            </mat-error>\n          </mat-form-field>\n  \n        </mat-card-content>\n        <span fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n          <a mat-button routerLink=\"/login\" routerLinkActive=\"active\">ログインへ</a>\n          <button mat-raised-button color=\"accent\" type=\"submit\" [disabled]=\"form.invalid\">登録</button>\n        </span>\n      </form>\n    </mat-card>\n  </div>\n","import { Component, OnInit, ViewChild, NgZone } from '@angular/core';\nimport { EmailEditorComponent } from 'angular-email-editor';\nimport { DbService } from '../db.service';\nimport { FileService } from '../file.service';\nimport { user } from '../user';\nimport { mail } from '../mail';\nimport { mailDesign } from '../mailDesign';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { MailService } from '../mail.service';\nimport { testMail } from '../testMail';\nimport { OverlaySpinnerService } from '../overlay-spinner.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, Subject } from 'rxjs';\nimport { Dialog2Component } from '../dialog2/dialog2.component';\nimport { Router } from '@angular/router';\n\nexport interface DialogData {\n  subject: string;\n}\n\n@Component({\n  selector: 'app-mail',\n  templateUrl: './mail.component.html',\n  styleUrls: ['./mail.component.css']\n})\nexport class MailComponent implements OnInit {\n  email: string = \"\";\n  subject: string = \"\";\n  appearance = {\n    loader: {\n      //html:'<div></div>'\n      url:'https://res.cloudinary.com/dctfqlyj9/image/upload/v1643959198/loader-1s-100px_soplk1.svg'\n    }\n  }\n  unSaved: boolean = true;\n\n\n  @ViewChild(EmailEditorComponent)\n  private emailEditor!: EmailEditorComponent;\n\n  constructor(\n    private dbService: DbService,\n    private fileService: FileService,\n    public dialog: MatDialog,\n    private mailService: MailService,\n    private overlaySpinnerService: OverlaySpinnerService,\n    private toastrService: ToastrService,\n    private ngZone: NgZone,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.getEmail();\n    this.getSubject();\n  }\n\n  editorLoaded(event: any) {\n    // load the design json here\n    this.dbService.get<mailDesign>('mailDesign')\n    .subscribe(design => {\n      if(design.design !== ''){\n        this.emailEditor.editor.loadDesign(JSON.parse(design.design));\n      }\n    });\n    const reader = new FileReader();\n    this.emailEditor.editor.registerCallback(\"image\", (file: any, done: (arg0: { progress: number, url: string; }) => void) => {\n      reader.readAsDataURL(file.attachments[0]);\n      reader.onload = () => {\n        if(typeof reader.result === 'string'){\n          this.fileService.upload(reader.result)\n          .subscribe(url =>{\n            done({\n              progress: 100,\n              url: url\n            });\n          });\n        }\n      }\n    });\n  }\n\n  /*\n  exportHtml() {\n    this.submitting = true;\n    this.emailEditor.editor.exportHtml((data: any) => console.log('exportHtml', data));\n  }\n  */\n\n  getEmail(): void {\n    this.dbService.get<user>('email')\n    .subscribe(user => this.email = user.email);\n  }\n\n  getSubject(): void {\n    this.dbService.get<DialogData>('subject')\n    .subscribe(data => this.subject = data.subject);\n  }\n\n  /**\n   * Sending test mail\n   */\n\n  onSend(): void {\n    let dialogRef = this.dialog.open(DialogComponent, {\n      width: '560px',\n      data: {subject: this.subject} \n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      //console.log(result);\n      if(typeof result === 'string'){\n        this.subject = result;\n        this.overlaySpinnerService.attach();\n        this.emailEditor.editor.exportHtml((data: any) => {\n          const mail: testMail = {\n            email: this.email,\n            html: data['html'],\n            subject: this.subject,\n            to: this.email   \n          }\n          this.mailService.send(mail)\n          .subscribe(res => {\n            if(res){\n              this.ngZone.run(() => {\n                this.overlaySpinnerService.detach();\n                this.toastrService.success('送信しました', '', { positionClass: 'toast-bottom-center', timeOut: 5000, closeButton: true});\n              });\n            }\n            else{\n              this.ngZone.run(() => {\n                this.overlaySpinnerService.detach();\n                this.toastrService.error('大変申し訳ありません。お手数ですが、お問い合わせからご報告をお願いいたします', '送信失敗', { positionClass: 'toast-bottom-full-width', timeOut: 6000, closeButton: true});\n              });\n            }\n          });\n        });\n      }\n    });\n  }\n\n  /**\n   * Save mail design and html, subject\n   */\n\n  onUserSave(): void {\n    let dialogRef = this.dialog.open(DialogComponent, {\n      width: '560px',\n      data: {subject: this.subject}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      //console.log(result);\n      if(typeof result === 'string'){\n        this.subject = result;\n        this.overlaySpinnerService.attach();\n        this.emailEditor.editor.exportHtml((data: any) => {\n          const mail: mail = {\n            email: \"\",\n            html: data['html'],\n            subject: this.subject  \n          }\n          const mailDesign: mailDesign = {\n            email: \"\",\n            design: data['design']\n          }\n\n          this.dbService.update<mailDesign>('mailDesign', mailDesign)\n          .subscribe(result => {\n            if(result){\n              this.dbService.update<mail>('mail', mail)\n              .subscribe(result => {\n                if(result){\n                  this.unSaved = false;\n                  this.ngZone.run(() => {\n                    this.overlaySpinnerService.detach();\n                    this.toastrService.success('設定で配信が有効になっているか確認してください', '保存しました', { positionClass: 'toast-bottom-center', timeOut: 6000, closeButton: true});\n                  });\n                  this.router.navigate(['/home/config']);\n                }\n                else{\n                  this.ngZone.run(() => {\n                    this.overlaySpinnerService.detach();\n                    this.toastrService.error('大変申し訳ありません。お手数ですが、お問い合わせからご報告をお願いいたします', '保存失敗', { positionClass: 'toast-bottom-full-width', timeOut: 6000, closeButton: true});\n                  });\n                }\n              });\n            }\n            else{\n              this.ngZone.run(() => {\n                this.overlaySpinnerService.detach();\n                this.toastrService.error('大変申し訳ありません。お手数ですが、お問い合わせからご報告を告お願いいたします', '保存失敗', { positionClass: 'toast-bottom-full-width', timeOut: 6000, closeButton: true});\n              });\n            }\n          });\n        });\n      }\n    });\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if(this.unSaved) {\n      let dialogRef = this.dialog.open(Dialog2Component, {\n        width: '400px'\n      });\n      let result_buf: Subject<boolean> = new Subject();\n\n      dialogRef.afterClosed().subscribe(result => {\n        result_buf.next(result);\n      });\n      return result_buf;\n    }\n    else{\n      return true;\n    }\n  }\n\n}\n","<div class=\"container\">\n    <email-editor locale=\"ja-JP\" minHeight=\"400px\"  [appearance]=\"appearance\" (loaded)=\"editorLoaded($event)\"></email-editor>\n    <mat-toolbar class=\"app-footer\" color=\"primary\">\n    <span fxLayout=\"row\" fxFlexOffset=\"auto\" fxLayoutGap=\"10px\">\n        <button mat-raised-button type=\"button\" (click)=\"onSend()\">{{email}} にテスト送信</button>\n        <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"onUserSave()\">保存</button>\n    </span>\n    </mat-toolbar>\n</div>","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { DbService } from '../db.service';\nimport { data } from '../data';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { OverlaySpinnerService } from '../overlay-spinner.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\n\nexport interface displayData {\n    orderId: string,\n    purchaseDate: string,\n    itemName: string,\n    orderStatus: string,\n    isSent: string,\n    unSend: boolean\n}\n\n/**\n * OrderStatuses\n * - PendingAvailability\n * - Pending\n * - Unshipped\n * - PartiallyShipped\n * - Shipped -> Detect Shipped\n * - InvoiceUnconfirmed -> Detect Shipped\n * - Canceled\n * - Unfulfillable\n */\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.css']\n})\nexport class DataComponent implements OnInit, AfterViewInit{\n  data!: data['data_arr']; \n  displayedColumns: string[] = [\n    'orderId',\n    'purchaseDate',\n    'itemName',\n    'orderStatus',\n    'isSent',\n    'notSend'\n  ];\n\n  dataSource = new MatTableDataSource<displayData>();\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private dbService: DbService,\n    private overlaySpinnerService: OverlaySpinnerService,\n    private toastrService: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.overlaySpinnerService.attach();\n    this.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  \n  /**\n   * Notice!: Push() for dataSource does not generate a trigger of object change in mat-table.\n   *          Use '=' to provide data to dataSource.\n   */\n\n  getData(): void {\n    this.dbService.get<data>('data')\n    .subscribe(data => {\n      this.data = data['data_arr'];\n      if(!this.data){\n        this.overlaySpinnerService.detach();\n        return;\n      }\n      let bufOrderStatus: string;\n      let bufIsSent: string;\n      let bufData: displayData[] = [];\n      for(let i = 0; i < this.data.length; i++){\n        if(this.data[i].orderStatus === 'Shipped' || this.data[i].orderStatus === 'InvoiceUnconfirmed'){\n          //this.dataSource[i].orderStatus = '発送済';\n          bufOrderStatus = '発送済';\n        }\n        else{\n          bufOrderStatus = '未発送';\n        }\n        if(this.data[i].isSent){\n          bufIsSent = '配信済';\n        }\n        else{\n          //this.dataSource[i].isSent = '未配信';\n          bufIsSent = '未配信';\n        }\n        let date = new Date(this.data[i].purchaseDate);\n        bufData.push({\n          orderId: this.data[i].orderId,\n          purchaseDate: `${date.getFullYear()}/${('0' + (date.getMonth() + 1)).slice(-2)}/${('0' + date.getDate()).slice(-2)}/ ${('0' + date.getHours()).slice(-2)}:${('0' + date.getMinutes()).slice(-2)}`,\n          itemName: this.data[i].itemName,\n          orderStatus: bufOrderStatus,\n          isSent: bufIsSent,\n          unSend: this.data[i].unSend\n        });\n      }\n      this.dataSource.data = bufData;\n      this.overlaySpinnerService.detach();\n    });\n  }\n\n  onSave(): void {\n    this.overlaySpinnerService.attach();\n    /* 未配信のみの配列に絞るべきか */\n    for(let i = 0; i < this.dataSource.data.length; i++){\n      if(this.dataSource.data[i].unSend === true) this.data[i].unSend = true;\n      if(this.dataSource.data[i].unSend === false) this.data[i].unSend = false;\n    }\n    this.dbService.update<data>('data', {email: \"\", data_arr: this.data})\n    .subscribe(result => {\n      if(result){\n        this.overlaySpinnerService.detach();\n        this.toastrService.success('反映しました', '', { positionClass: 'toast-bottom-center', timeOut: 5000, closeButton: true});\n        this.ngOnInit();\n      }\n      else{\n        this.overlaySpinnerService.detach();\n        this.toastrService.error('大変申し訳ありません。お手数ですが、お問い合わせからご報告をお願いいたします', '反映失敗', { positionClass: 'toast-bottom-full-width', timeOut: 6000, closeButton: true});\n      }\n    });\n  }\n}\n","<mat-card class=\"data-card\">\n    <mat-card-header class=\"data-header\">\n        <mat-card-title>データ</mat-card-title>\n        <button fxFlexOffset=\"auto\" mat-raised-button color=\"accent\" class=\"btn-block\" (click)=\"onSave()\">反映</button>\n    </mat-card-header>\n    <mat-card-content>\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"purchaseDate\" matSortDirection=\"desc\">\n\n                <!--- Note that these columns can be defined in any order.\n                    The actual rendered columns are set as a property on the row definition\" -->\n            \n                <!-- orderId Column -->\n                <ng-container matColumnDef=\"orderId\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>注文番号</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.orderId}} </td>\n                </ng-container>\n\n                <!-- purchaseDate Column -->\n                <ng-container matColumnDef=\"purchaseDate\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>購入日</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.purchaseDate}} </td>\n                </ng-container>\n\n                <!-- itemName Column -->\n                <ng-container matColumnDef=\"itemName\">\n                    <th mat-header-cell *matHeaderCellDef>商品名</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.itemName}} </td>\n                </ng-container>\n            \n                <!-- orderStatus Column -->\n                <ng-container matColumnDef=\"orderStatus\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>発送状況</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.orderStatus=='未発送'\" style=\"color: red;\">{{element.orderStatus}}</span>\n                        <span *ngIf=\"element.orderStatus=='発送済'\" style=\"color: green;\">{{element.orderStatus}}</span>\n                    </td>\n                </ng-container>\n\n                <!-- isSent Column -->\n                <ng-container matColumnDef=\"isSent\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>メール配信</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"element.isSent=='未配信'\" style=\"color: red;\">{{element.isSent}}</span>\n                        <span *ngIf=\"element.isSent=='配信済'\" style=\"color: green;\">{{element.isSent}}</span>\n                    </td>\n                </ng-container>\n\n                <!-- unSend Column -->\n                <ng-container matColumnDef=\"notSend\">\n                    <th mat-header-cell *matHeaderCellDef>配信しない</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <mat-slide-toggle *ngIf=\"element.isSent=='未配信'\" [(ngModel)]=\"element.unSend\"></mat-slide-toggle>\n                    </td>\n                </ng-container>\n            \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"[100, 500, 1000]\"></mat-paginator>\n        </div>\n    </mat-card-content>\n</mat-card>\n  \n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    /* Initial display */ \n    this.router.navigate(['/home/mail']);\n  }\n\n}\n","<app-navi>\n    <router-outlet></router-outlet>\n</app-navi>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { DbService } from '../db.service';\nimport { OverlaySpinnerService } from '../overlay-spinner.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\n\nexport class AuthComponent implements OnInit {\n  params!: Params;\n  url!: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private dbService: DbService,\n    private router: Router,\n    private overlaySpinnerService: OverlaySpinnerService,\n    private toastrService: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.overlaySpinnerService.attach();\n    this.dbService.tokensExist()\n    .subscribe(result => {\n      if(result){\n        this.overlaySpinnerService.detach();\n        this.router.navigate(['home']);\n      }\n      else{\n        this.params = this.route.snapshot.queryParams;\n        //console.log(this.params);\n        if(this.params[\"spapi_oauth_code\"] && this.params[\"selling_partner_id\"])\n        {\n          this.authService.exchangeToken(this.params[\"spapi_oauth_code\"], this.params[\"selling_partner_id\"])\n          .subscribe(res => {\n            console.log(res);\n            if(Number(res['result']) === 1){\n              this.authService.logout().subscribe(() => {\n                this.overlaySpinnerService.detach();\n                this.toastrService.error(`このセラーアカウントは、既に本アプリの${res['email']} のアカウントに紐づいています。ログインするか、パスワードを忘れた場合は再発行してください`, '連携失敗', { positionClass: 'toast-bottom-full-width', disableTimeOut: true, closeButton: true});\n                this.router.navigate(['/login']);\n              });\n            }\n            else if(Number(res['result']) === 0){\n              this.dbService.dbInit()\n              .subscribe(() => {\n                this.overlaySpinnerService.detach();\n                this.ngOnInit();\n              });\n            }\n          });\n        }\n        else\n        {\n          this.overlaySpinnerService.detach();\n          window.location.href = \n          \"https://sellercentral.amazon.co.jp/apps/authorize/consent?application_id=amzn1.sp.solution.64bd6392-c1a0-4951-9b00-2744796fc74a&version=beta&state=123456\";\n        }\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms'\nimport { config } from '../config';\nimport { DbService } from '../db.service';\nimport { OverlaySpinnerService } from '../overlay-spinner.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { DeleteComponent } from '../delete/delete.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.css']\n})\nexport class ConfigComponent implements OnInit {\n  config: config = {\n    email: '',\n    status: false,\n    dulation: 0,\n    from: '',\n    to: '',\n    fba: false,\n    mba: false,\n    new: false,\n    mint: false,\n    verygood: false,\n    good: false,\n    acceptable: false\n  }\n  statusOptions: string[] = ['無効', '有効'];\n  status : string = this.statusOptions[0];\n  dulation: number = 0;\n  dulations = [{value: 0, viewValue: \"0日後に送信する\"}];\n  from: string = '';\n  to: string = '';\n  fba: boolean = false;\n  mba: boolean = false;\n  new: boolean = false;\n  mint: boolean = false;\n  verygood: boolean = false;\n  good: boolean = false;\n  acceptable: boolean = false;\n  radioControl = new FormControl(this.status);\n  selectControl = new FormControl(this.dulation);\n  fromControl = new FormControl(this.from);\n  toControl = new FormControl(this.to);\n  fbaControl = new FormControl(this.fba);\n  mbaControl = new FormControl(this.mba);\n  newControl = new FormControl(this.new);\n  mintControl = new FormControl(this.mint);\n  verygoodControl = new FormControl(this.verygood);\n  goodControl = new FormControl(this.good);\n  acceptableControl = new FormControl(this.acceptable);\n  form!: FormGroup;\n  \n  constructor(\n    private fb: FormBuilder,\n    private dbService: DbService,\n    private overlaySpinnerService: OverlaySpinnerService,\n    private toastrService: ToastrService,\n    public dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {\n    this.overlaySpinnerService.attach();\n    for(let i = 1; i < 31; i++){\n      this.dulations.push({value: i, viewValue: `${i}日後に送信する`});\n    }\n    this.form = this.fb.group({\n      status: this.radioControl,\n      select: this.selectControl,\n      from: this.fromControl,\n      to: this.toControl,\n      fba: this.fbaControl,\n      mba: this.mbaControl,\n      new: this.newControl,\n      mint: this.mintControl,\n      verygood: this.verygoodControl,\n      good: this.goodControl,\n      acceptable: this.acceptableControl\n    });\n    this.getConfig();\n  }\n\n  getConfig() : void {\n    /* Initialize only checkbox here */\n    this.config.fba = false;\n    this.config.mba = false;\n    this.config.new = false;\n    this.config.mint = false;\n    this.config.verygood = false;\n    this.config.good = false;\n    this.config.acceptable = false;\n\n    this.dbService.get<config>('config')\n    .subscribe(config => {\n      this.config = config;\n      //console.log(this.config);\n      if(this.config.status) this.status = this.statusOptions[1];\n      this.dulation = this.config.dulation;\n      this.from = this.config.from;\n      this.to = this.config.to;\n      this.fba = this.config.fba;\n      this.mba = this.config.mba;\n      this.new = this.config.new;\n      this.mint = this.config.mint;\n      this.verygood = this.config.verygood;\n      this.good = this.config.good;\n      this.acceptable =this.config.acceptable;\n      this.overlaySpinnerService.detach();\n    });\n  }\n\n  onSave(): void {\n    this.overlaySpinnerService.attach();\n    if(this.status === this.statusOptions[0]) this.config.status = false;\n    if(this.status === this.statusOptions[1]) this.config.status = true;\n    this.config.dulation = this.dulation;\n    this.config.from = this.from;\n    this.config.to = this.to;\n    this.config.fba = this.fba;\n    this.config.mba = this.mba;\n    this.config.new = this.new;\n    this.config.mint = this.mint;\n    this.config.verygood = this.verygood;\n    this.config.good = this.good;\n    this.config.acceptable = this.acceptable;\n    this.dbService.update<config>('config', this.config)\n    .subscribe(result => {\n      if(result){\n        this.overlaySpinnerService.detach();\n        //this.submitting = false;\n        this.toastrService.success('更新しました', '', { positionClass: 'toast-bottom-center', timeOut: 5000, closeButton: true});\n        this.ngOnInit();\n      }\n      else{\n        this.overlaySpinnerService.detach();\n        this.toastrService.error('大変申し訳ありません。お手数ですが、お問い合わせからご報告をお願いいたします', '更新失敗', { positionClass: 'toast-bottom-full-width', timeOut: 6000, closeButton: true});\n      }\n    })\n\n  }\n\n  onDelete(): void {\n    this.dialog.open(DeleteComponent, {\n      width: '380px'\n    });\n  }\n\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"config-card\">\n        <mat-card-header>\n            <mat-card-title>設定</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <form [formGroup]=\"form\" novalidate (ngSubmit)=\"onSave()\">\n                <div fxLayout=\"column\" fxLayoutAlign=\"space-between\" fxLayoutGap=\"10px\">\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                        <label class=\"example-margin\">メール自動配信</label>\n                        <mat-radio-group [formControl]=\"radioControl\"\n                            name=\"status\"\n                            class=\"radio-group\"\n                            [(ngModel)]=\"status\">\n                            <mat-radio-button name=\"status\" class=\"radio-button\" *ngFor=\"let status of statusOptions\" [value]=\"status\">\n                                {{status}}\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n\n                    <div class=\"example-margin-2\">\n                        <mat-form-field>\n                            <mat-label>発送から配信までの間隔</mat-label>\n                            <mat-select [formControl]=\"selectControl\"\n                                name=\"dulation\"\n                                [(ngModel)]=\"dulation\">\n                                <!--<mat-option>--</mat-option>-->\n                                <mat-option *ngFor=\"let dulation of dulations\" [value]=\"dulation.value\">\n                                    {{dulation.viewValue}}\n                                </mat-option>\n                            </mat-select>\n                            <!--<mat-error *ngIf=\"selectControl.hasError('required')\">\n                                <strong>選択してください</strong>\n                            </mat-error>-->\n                        </mat-form-field>\n                    </div>\n  \n                    <div class=\"example-margin-2\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n                        <mat-form-field>\n                            <mat-label>開始時刻</mat-label>\n                            <input matInput type=\"time\" name=\"from\" [(ngModel)]=\"from\" formControlName=\"from\"/>\n                        </mat-form-field>\n                        <span>から</span>\n                        <mat-form-field>\n                            <mat-label>終了時刻</mat-label>\n                            <input matInput type=\"time\" name=\"to\" [(ngModel)]=\"to\" formControlName=\"to\"/>\n                        </mat-form-field>\n                        <span>の間は配信しない</span>    \n                    </div>\n\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                        <label class=\"example-margin\">出荷方法</label>\n                        <mat-checkbox class=\"example-margin\" name=\"fba\" [(ngModel)]=\"fba\" formControlName=\"fba\" >FBA</mat-checkbox>\n                        <mat-checkbox class=\"example-margin\" name=\"mba\" [(ngModel)]=\"mba\" formControlName=\"mba\">自己配送</mat-checkbox>\n                    </div>\n\n                    <div fxLayout=\"row\" fxLayoutAlign=\"startcenter\">\n                        <label class=\"example-margin\">コンディション</label>\n                        <mat-checkbox class=\"example-margin\" name=\"new\" [(ngModel)]=\"new\" formControlName=\"new\">新品</mat-checkbox>\n                        <mat-checkbox class=\"example-margin\" name=\"mint\" [(ngModel)]=\"mint\" formControlName=\"mint\">中古-ほぼ新品</mat-checkbox>\n                        <mat-checkbox class=\"example-margin\" name=\"verygood\" [(ngModel)]=\"verygood\" formControlName=\"verygood\">中古-非常に良い</mat-checkbox>\n                        <mat-checkbox class=\"example-margin\" name=\"good\" [(ngModel)]=\"good\" formControlName=\"good\">中古-良い</mat-checkbox>\n                        <mat-checkbox class=\"example-margin\" name=\"acceptable\" [(ngModel)]=\"acceptable\" formControlName=\"acceptable\">中古-可</mat-checkbox>\n                    </div>\n                \n                    <div fxLayout=\"row\">\n                        <span fxFlexOffset=\"auto\">\n                            <button mat-raised-button color=\"accent\" class=\"btn-block\" type=\"submit\" [disabled]=\"form.invalid\">更新</button>\n                        </span>\n                    </div>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n    <div>\n        <span class=\"delete-btn\" fxLayout=\"row\" fxFlexOffset=\"auto\">\n            <button mat-raised-button type=\"button\" (click)=\"onDelete()\">アカウント削除</button>\n        </span>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, shareReplay } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\nimport { testMail } from './testMail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n\n  constructor(private http: HttpClient) { }\n\n  send(mail: testMail): Observable<boolean>{\n    return this.http.post<testMail>('/mail/send', mail, this.httpOptions)\n    .pipe(\n      map(result =>{\n        if(result) {\n          return true;\n        }\n        else{\n          return false;\n        }\n      }),\n      catchError(this.handleError<boolean>(false)),\n      shareReplay(1)\n    );\n  }\n\n  private handleError<T>(result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n      return of(result as T);\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { OverlaySpinnerService } from '../overlay-spinner.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.css']\n})\nexport class ForgotComponent implements OnInit {\n  email: string = '';\n  form!: FormGroup;\n  emailControl = new FormControl(null, [\n    Validators.required,\n    Validators.email\n  ]);\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private overlaySpinnerService: OverlaySpinnerService,\n    private toastrService: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      email: this.emailControl\n    });\n  }\n\n  onSubmit(): void {\n    this.overlaySpinnerService.attach();\n    //console.log(this.form.value);\n    this.email = this.form.get('email')?.value; \n    this.authService.pwReset(this.email)\n    .subscribe(res => {\n      switch(res['result']){\n        case 0:\n          this.overlaySpinnerService.detach();\n          this.toastrService.success(`${this.email} にパスワード再発行用メールを送信しました。ご確認ください`, '送信完了', { positionClass: 'toast-bottom-full-width', timeOut: 7000, closeButton: true});\n          break;\n        case 1:\n          this.overlaySpinnerService.detach();\n          this.toastrService.error('このメールアドレスは登録されていません', '登録なし', { positionClass: 'toast-bottom-center', timeOut: 5000, closeButton: true});\n          break;\n        default:\n          this.overlaySpinnerService.detach();\n          this.toastrService.error('大変申し訳ありません。しばらく経ってから再度送信していただくか、復旧をお待ちください', '送信失敗', { positionClass: 'toast-bottom-full-width', timeOut: 6000, closeButton: true});\n      }\n    });\n  }\n}\n","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <mat-card class=\"box\">\n      <p class=\"img_logo\">\n        <img src=\"https://res.cloudinary.com/dctfqlyj9/image/upload/v1643959198/icons8-starfish-96_gzopmn.png\"/>\n      </p>\n      <mat-card-header>\n        <mat-card-title>パスワード再発行</mat-card-title>\n      </mat-card-header>\n  \n      <form class=\"example-form\" [formGroup]=\"form\" novalidate (ngSubmit)=\"onSubmit()\">\n        <mat-card-content>\n          <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"登録しているメールアドレス\" type=\"email\" name=\"email\" formControlName=\"email\">\n            <mat-error *ngIf=\"emailControl.hasError('required') || emailControl.hasError('email')\">\n                <strong>メールアドレスを入力してください</strong>\n            </mat-error>\n          </mat-form-field>\n        </mat-card-content>\n        <button mat-raised-button color=\"accent\" class=\"btn-block\" type=\"submit\" [disabled]=\"form.invalid\">送信</button>\n      </form>\n    </mat-card>\n    \n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { OverlaySpinnerService } from '../overlay-spinner.service';\nimport { DbService } from '../db.service';\nimport { user } from '../user';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeleteComponent } from '../delete/delete.component';\n\n@Component({\n  selector: 'app-navi',\n  templateUrl: './navi.component.html',\n  styleUrls: ['./navi.component.css']\n})\nexport class NaviComponent implements OnInit {\n  email: string = '';\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private authService: AuthService,\n    private router: Router,\n    private overlaySpinnerService: OverlaySpinnerService,\n    private dbService: DbService,\n    public dialog: MatDialog\n    ) {}\n\n  ngOnInit(): void {\n    this.getEmail();\n  }\n\n  getEmail(): void {\n    this.dbService.get<user>('email')\n    .subscribe(user => this.email = user.email);\n  }\n\n  onLogout(): void{\n    this.overlaySpinnerService.attach()\n    this.authService.logout().subscribe(() => {\n      this.overlaySpinnerService.detach();\n      this.router.navigate(['/']);\n    });\n  }\n\n  onDelete(): void {\n    this.dialog.open(DeleteComponent, {\n      width: '380px'\n    });\n  }\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>メニュー</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"['/home/mail']\"><mat-icon class=\"list-icon\">email</mat-icon>メール作成</a>\n      <a mat-list-item [routerLink]=\"['/home/config']\"><mat-icon class=\"list-icon\">settings</mat-icon>設定</a>\n      <a mat-list-item [routerLink]=\"['/home/data']\"><mat-icon class=\"list-icon\">description</mat-icon>データ</a>\n      <a mat-list-item [routerLink]=\"['/home/contact']\"><mat-icon class=\"list-icon\">contact_support</mat-icon>お問い合わせ</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span class=\"navi-title\">楽コメ <small>～RakuComeRakuCome～</small></span>\n      <span class=\"email\" fxFlexOffset=\"auto\" >\n        {{email}}\n        <button\n          type=\"button\"\n          mat-icon-button\n          [matMenuTriggerFor]=\"userMenu\">\n          <mat-icon>keyboard_arrow_down</mat-icon>\n        </button>\n        <mat-menu #userMenu=\"matMenu\" class=\"user-profile\">\n          <button mat-menu-item (click)=\"onLogout()\">\n              <mat-icon>logout</mat-icon>\n              ログアウト\n          </button>\n          <button mat-menu-item (click)=\"onDelete()\">\n              <mat-icon>delete_forever</mat-icon>\n              アカウント削除\n          </button>\n        </mat-menu>\n      </span>\n    </mat-toolbar>\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n\n  constructor(private http: HttpClient) { }\n\n  upload(data: string): Observable<string> {\n    return this.http.post<string>('file/upload', JSON.stringify({data: data}), this.httpOptions)\n    .pipe(\n      catchError(this.handleError<string>())\n    );\n  }\n\n  private handleError<T>(result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n      return of(result as T);\n    };\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'アプリケーション';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { OverlaySpinnerService } from '../overlay-spinner.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.css']\n})\nexport class ResetComponent implements OnInit {\n  display : boolean = false;\n  email: string = '';\n  password: string = ''\n  form!: FormGroup;\n  emailControl = new FormControl(this.email);\n  passwordControl = new FormControl(null, Validators.required);\n  password2Control = new FormControl(null, Validators.required);\n  \n\n  \n  constructor(\n    private authService: AuthService,\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private overlaySpinnerService: OverlaySpinnerService,\n    private toastrService: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.overlaySpinnerService.attach();\n    this.checkToken();\n    this.form = this.fb.group({\n      email: this.emailControl,\n      password: this.passwordControl,\n      password2: this.password2Control\n    });\n  }\n\n  onSubmit(): void {\n    this.email = this.form.get('email')?.value; \n    this.password = this.form.get('password')?.value;\n    if(this.password !== this.form.get('password2')?.value){\n      this.toastrService.error('パスワードが一致しません', '', {positionClass: 'toast-bottom-center', timeOut: 5000, closeButton: true});\n      this.form.get('password')?.setValue(null);\n      this.form.get('password2')?.setValue(null);\n      return;\n    }\n    else{\n      this.overlaySpinnerService.attach();\n      this.authService.pwRepublish(this.email, this.password)\n      .subscribe(result => {\n        if(result){\n          this.overlaySpinnerService.detach();\n          this.toastrService.success('パスワードの再発行が完了しました', '', {positionClass: 'toast-bottom-center', timeOut: 5000, closeButton: true});\n          this.router.navigate(['login']);\n        }\n        else{\n          this.overlaySpinnerService.detach();\n          this.toastrService.error('大変申し訳ありません。しばらく経ってから再度試していただくか、復旧をお待ちください', '再発行失敗', { positionClass: 'toast-bottom-full-width', timeOut: 6000, closeButton: true});\n        }\n      })\n    }\n  }\n\n  checkToken(): void {\n    const token = String(this.route.snapshot.paramMap.get('token'));\n    this.authService.tokenCheck(token)\n    .subscribe(res => {\n      switch(res['result']){\n        case 0:\n          this.display = true;\n          this.overlaySpinnerService.detach();\n          this.email = res['email'];\n          break;\n        case 1:\n          this.overlaySpinnerService.detach();\n          this.toastrService.error('リンクが不正か、有効期限が切れている恐れがあります', 'アクセス失敗', { positionClass: 'toast-bottom-center', timeOut: 6000, closeButton: true});\n          this.router.navigate(['login']);\n          break;\n        default:\n          this.overlaySpinnerService.detach();\n          this.toastrService.error('大変申し訳ありません。しばらく経ってから再度試していただくか、復旧をお待ちください', 'アクセス失敗', { positionClass: 'toast-bottom-full-width', timeOut: 6000, closeButton: true});\n      }\n    });\n  }\n}\n","<div *ngIf=\"display\" class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\t<mat-card class=\"box\">\n\t\t<p class=\"img_logo\">\n\t\t\t<img src=\"https://res.cloudinary.com/dctfqlyj9/image/upload/v1643959198/icons8-starfish-96_gzopmn.png\"/>\n\t\t</p>\n\t\t<mat-card-header>\n\t\t\t<mat-card-title>パスワード再発行</mat-card-title>\n\t\t</mat-card-header>\n\n\t\t<form class=\"example-form\" [formGroup]=\"form\" novalidate (ngSubmit)=\"onSubmit()\">\n\n\t\t\t<mat-card-content>\n\n\t\t\t\t<mat-form-field class=\"example-full-width\">\n\t\t\t\t\t\t<mat-label>メールアドレス</mat-label>\n\t\t\t\t\t\t<input matInput type=\"email\" name=\"email\" [(ngModel)]=\"email\" formControlName=\"email\" readonly>\n\t\t\t\t</mat-form-field>\n\n\t\t\t\t<mat-form-field class=\"example-full-width\">\n\t\t\t\t\t<input matInput placeholder=\"新しいパスワード\" type=\"password\" name=\"password\" formControlName=\"password\" autocomplete=\"off\">\n\t\t\t\t\t<mat-error *ngIf=\"passwordControl.hasError('required')\">\n\t\t\t\t\t\t\t<strong>パスワードを入力してください</strong>\n\t\t\t\t\t</mat-error>\n\t\t\t\t</mat-form-field>\n\n\t\t\t\t<mat-form-field class=\"example-full-width\">\n\t\t\t\t\t<input matInput placeholder=\"新しいパスワード(確認)\" type=\"password\" name=\"password2\" formControlName=\"password2\" autocomplete=\"off\">\n\t\t\t\t\t<mat-error *ngIf=\"password2Control.hasError('required')\">\n\t\t\t\t\t\t\t<strong>パスワード(確認)を入力してください</strong>\n\t\t\t\t\t</mat-error>\n\t\t\t\t</mat-form-field>\n\n\t\t\t</mat-card-content>\n\n\t\t\t<button mat-raised-button color=\"accent\" class=\"btn-block\" type=\"submit\" [disabled]=\"form.invalid\">決定</button>\n\n\t\t</form>\n\t</mat-card>\n</div>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule, MatSpinner } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EmailEditorModule } from 'angular-email-editor';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { NaviComponent } from './navi/navi.component';\nimport { DataComponent } from './data/data.component';\nimport { MailComponent } from './mail/mail.component';\nimport { HomeComponent } from './home/home.component';\nimport { ConfigComponent } from './config/config.component';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { Dialog2Component } from './dialog2/dialog2.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { ResetComponent } from './reset/reset.component';\nimport { DeleteComponent } from './delete/delete.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    NaviComponent,\n    LoginComponent,\n    RegisterComponent,\n    DataComponent,\n    MailComponent,\n    HomeComponent,\n    ConfigComponent,\n    DialogComponent,\n    ContactComponent,\n    Dialog2Component,\n    ForgotComponent,\n    ResetComponent,\n    DeleteComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    HttpClientModule,\n    MatAutocompleteModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatSlideToggleModule,\n    MatTableModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatButtonToggleModule,\n    MatTreeModule,\n    MatBadgeModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatTooltipModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    EmailEditorModule,\n    MatDialogModule,\n    OverlayModule,\n    PortalModule,\n    ToastrModule.forRoot()\n  ],\n  entryComponents: [\n    DialogComponent,\n    MatSpinner\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface DialogData {\n  subject: string\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>メールのタイトルを設定</h2>\n<div mat-dialog-content>\n  <!--<p>What's your favorite animal?</p>-->\n  <mat-form-field>\n    <mat-label>タイトル</mat-label>\n    <input matInput [(ngModel)]=\"data.subject\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions class=\"dialog-buttons\">\n  <button mat-button (click)=\"onNoClick()\">キャンセル</button>\n  <span fxFlexOffset=\"auto\">\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data.subject\">完了</button>\n  </span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { user } from '../user';\nimport { testMail } from '../testMail';\nimport { DbService } from '../db.service';\nimport { MailService } from '../mail.service';\nimport { OverlaySpinnerService } from '../overlay-spinner.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n  form!: FormGroup;\n  email: string ='';\n  emailControl = new FormControl(this.email);\n  subjectControl = new FormControl(null, Validators.required);\n  contentControl = new FormControl(null, Validators.required);\n  ADMIN_EMAIL: string = 'nabe.daisuke@gmail.com'; \n  \n\n  constructor(\n    private fb: FormBuilder,\n    private dbService: DbService,\n    private mailService: MailService,\n    private overlaySpinnerService: OverlaySpinnerService,\n    private toastrService: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.overlaySpinnerService.attach();\n    this.getEmail();\n    this.form = this.fb.group({\n      email: this.emailControl,\n      subject: this.subjectControl,\n      content: this.contentControl\n    });\n  }\n\n  getEmail(): void {\n    this.dbService.get<user>('email')\n    .subscribe(user => {\n      this.email = user.email;\n      this.overlaySpinnerService.detach();\n    });\n  }\n\n  onSubmit(): void {\n    this.overlaySpinnerService.attach();\n    const mailData: testMail = {\n      email: '',\n      subject: `【お問い合わせ】${this.form.get('subject')?.value}`,\n      to: this.ADMIN_EMAIL,\n      html: `<p>${this.email} 様より以下の内容でお問い合わせを頂きました。</p><p>上記のメールアドレスに直接ご回答ください。</p><p>------------------------------------------</p><p>${(this.form.get('content')?.value).split('\\n').join('<br>')}</p>`\n    }\n    this.mailService.send(mailData)\n    .subscribe(result => {\n      if(result){\n        this.overlaySpinnerService.detach();\n        this.toastrService.success('送信しました', '', { positionClass: 'toast-bottom-center', timeOut: 5000, closeButton: true});\n      }\n      else{\n        this.overlaySpinnerService.detach();\n        this.toastrService.error('大変申し訳ありません。しばらく経ってから再度送信していただくか、復旧をお待ちください', '送信失敗', { positionClass: 'toast-bottom-full-width', timeOut: 6000, closeButton: true});\n      }\n    })\n\n  }\n}\n","<mat-card class=\"contact-card\">\n  <mat-card-header>\n    <mat-card-title>お問い合わせ</mat-card-title>\n  </mat-card-header>\n\n  <form class=\"contact-form\" [formGroup]=\"form\" novalidate (ngSubmit)=\"onSubmit()\">\n    <mat-card-content>\n      <div fxLayout=\"column\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"16px\">\n\n          <div fxFlex fxLayout=\"column\">\n\n            <mat-form-field fxFlex class=\"example-full-width\" appearance=\"fill\">\n              <mat-label>あなたのメールアドレス</mat-label>\n              <input matInput type=\"email\" name=\"email\" [(ngModel)]=\"email\" formControlName=\"email\" readonly>\n            </mat-form-field>\n            <span class=\"readonly-email\">こちらのメールアドレスに回答いたします</span>            \n\n            <mat-form-field fxFlex class=\"example-full-width\" appearance=\"fill\">\n              <mat-label>タイトル</mat-label>\n              <input matInput name=\"subject\" formControlName=\"subject\">\n              <mat-error *ngIf=\"subjectControl.hasError('required')\">\n                  <strong>タイトルを入力してください</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n\n          <mat-form-field fxFlex class=\"example-full-width\" appearance=\"fill\">\n            <mat-label>内容</mat-label>\n            <textarea matInput rows=\"20\" name=\"content\" formControlName=\"content\"></textarea>\n            <mat-error *ngIf=\"contentControl.hasError('required')\">\n                <strong>内容を入力してください</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div> \n          <span fxLayout=\"row\" fxFlexOffset=\"auto\">\n            <button mat-raised-button color=\"accent\" class=\"btn-block\" type=\"submit\" [disabled]=\"form.invalid\">送信</button>\n          </span>\n        </div>\n      </div>\n    </mat-card-content>\n  </form>\n</mat-card>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { shareReplay, tap, catchError} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { user } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  createUser(user: user): Observable<any>{\n    return this.http.post('auth/create', user, this.httpOptions)\n    .pipe(\n      catchError(this.handleError<any>(null)),\n      shareReplay(1)\n    );\n  }\n\n  userExist(email: string): Observable<boolean> {\n    return this.http.post<boolean>('auth/exist', JSON.stringify({\"email\": email}), this.httpOptions)\n    .pipe(\n      map(result => {\n        if(result){\n          return true;\n        }\n        else{\n          return false;\n        }\n      }),\n      catchError(this.handleError<boolean>(false))\n    );\n  }\n\n\n  login(user: user): Observable<boolean>{\n    return this.http.post<user>('/auth/login', user, this.httpOptions)\n    .pipe(\n      map(result =>{\n        if(result){\n          return true;\n        }\n        else{\n          return false;\n        }\n      }),\n      catchError(this.handleError<boolean>(false)),\n      shareReplay(1)\n    );\n  }\n\n  isAuthenticated(): Observable<boolean> {\n    return this.http.get<boolean>('/auth/check', this.httpOptions)\n    .pipe(\n      map(result => {\n        if(result){\n          return true;\n        }\n        else{\n          return false;\n        }\n      }),\n      catchError(this.handleError<boolean>(false))\n    );\n  }\n\n  logout(): Observable<string>{\n    return this.http.get<string>('/auth/logout', this.httpOptions)\n    .pipe(\n      catchError(this.handleError<string>('logout failed'))\n    );\n  }\n\n  exchangeToken(code: string, id: string): Observable<any> {\n    return this.http.post('auth/exchange', JSON.stringify({'code': code, 'id': id}), this.httpOptions)\n    .pipe(\n      catchError(this.handleError<any>(null)),\n      shareReplay(1)\n    );\n  }\n\n  pwReset(email: string): Observable<any> {\n    return this.http.post('auth/reset', JSON.stringify({\"email\": email}),this.httpOptions)\n    .pipe(\n      catchError(this.handleError<any>(null)),\n      shareReplay(1)\n    );\n  }\n\n  tokenCheck(token: string): Observable<any> {\n    return this.http.post('auth/tokenCheck', JSON.stringify({\"token\": token}), this.httpOptions)\n    .pipe(\n      catchError(this.handleError<any>(null))\n    );\n  }\n\n  pwRepublish(email: string, password: string): Observable<boolean> {\n    return this.http.post('auth/republish', JSON.stringify({\"email\": email, \"password\": password}), this.httpOptions)\n    .pipe(\n      map(result => {\n        if(result){\n          return true;\n        }\n        else{\n          return false;\n        }\n      }),\n      catchError(this.handleError<boolean>(false))\n    );\n  }\n\n  handleError<T>(result?: T) {\n    return (error: any): Observable<T> => {\n      console.log(error);\n      return of(result as T);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { DbService } from '../db.service';\nimport { OverlaySpinnerService } from '../overlay-spinner.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.css']\n})\nexport class DeleteComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteComponent>,\n    private dbService: DbService,\n    private overlaySpinnerService: OverlaySpinnerService,\n    private toastrService: ToastrService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ok(): void {\n    this.overlaySpinnerService.attach();\n    this.dbService.delete()\n    .subscribe(result => {\n      if(result){\n        this.toastrService.success('アカウントを削除しました', '', { positionClass: 'toast-bottom-center', timeOut: 5000, closeButton: true});\n        this.overlaySpinnerService.detach();\n        this.router.navigate(['/']);\n        this.dialogRef.close();\n      }\n    })\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>本当に削除してもよろしいですか？</h2>\n<div mat-dialog-content>\n  <p>データは全て失われます</p>\n</div>\n<div mat-dialog-actions class=\"dialog-buttons\">\n  <button mat-button (click)=\"cancel()\">いいえ</button>\n  <span fxFlexOffset=\"auto\">\n    <button mat-raised-button color=\"primary\" (click)=\"ok()\">はい</button>\n  </span>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog2',\n  templateUrl: './dialog2.component.html',\n  styleUrls: ['./dialog2.component.css']\n})\nexport class Dialog2Component implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<Dialog2Component>,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ok(): void {\n    this.dialogRef.close(true);\n  }\n\n  cancel(): void {\n    this.dialogRef.close(false);\n  }\n\n}\n","<h2 mat-dialog-title>このまま移動しても大丈夫ですか？</h2>\n<div mat-dialog-content>\n  <p>保存していないデータは失われます</p>\n</div>\n<div mat-dialog-actions class=\"dialog-buttons\">\n  <button mat-button (click)=\"cancel()\">いいえ</button>\n  <span fxFlexOffset=\"auto\">\n    <button mat-raised-button color=\"primary\" (click)=\"ok()\">はい</button>\n  </span>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, shareReplay } from 'rxjs/operators';\nimport { user } from './user'; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DbService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n\n  constructor(private http: HttpClient) { }\n\n  tokensExist(): Observable<boolean> {\n    return this.http.get<boolean>('user/tokens', this.httpOptions)\n    .pipe(\n      map(result => {\n        if(result){\n          return true;\n        }\n        else{\n          return false;\n        }\n      }),\n      catchError(this.handleError<boolean>(false))\n    );\n  }\n\n  dbInit(): Observable<any> {\n    return this.http.get('user/init', this.httpOptions)\n    .pipe(\n      catchError(this.handleError<any>(null)),\n      shareReplay(1)\n    );\n  }\n\n  get<T>(kind: string): Observable<T> {\n    const url = `user/${kind}`;\n    return this.http.get<T>(url, this.httpOptions)\n    .pipe(\n      catchError(this.handleError<T>())\n    );\n  }\n\n  getAll<T>(kind: string): Observable<T[]> {\n    const url = `user/${kind}`;\n    return this.http.get<T[]>(url, this.httpOptions)\n    .pipe(\n      catchError(this.handleError<T[]>())\n    );\n  }\n\n  update<T>(kind: string, data: T): Observable<boolean> {\n    const url = `user/${kind}`;\n    return this.http.post<T>(url, data, this.httpOptions)\n    .pipe(\n      map(result => {\n        if(result){\n          return true;\n        }\n        else{\n          return false;\n        }\n      }),\n      catchError(this.handleError<boolean>(false))\n    );\n  }\n\n  delete() : Observable<boolean> {\n    const url = 'user/delete';\n    return this.http.get(url, this.httpOptions)\n    .pipe(\n      map(result => {\n        if(result){\n          return true;\n        }\n        else{\n          return false;\n        }\n      }),\n      catchError(this.handleError<boolean>(false))\n    );\n\n  }\n\n  private handleError<T>(result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n      return of(result as T);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { MatSpinner } from '@angular/material/progress-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OverlaySpinnerService {\n\n  constructor(\n    private overlay: Overlay\n  ) { }\n\n  overlayRef = this.overlay.create({\n    hasBackdrop: true,\n    positionStrategy: this.overlay\n      .position().global().centerHorizontally().centerVertically()\n  });\n\n  attach(): void {\n    this.overlayRef.attach(new ComponentPortal(MatSpinner));\n  }\n  \n  detach(): void {\n    this.overlayRef.detach();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { map } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      return this.authService.isAuthenticated()\n      .pipe(\n        map(result => {\n          if(!result){\n            this.router.navigate(['login']);\n          }\n          return result;\n        })\n      );\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\n\nimport { AuthComponent } from './auth/auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DataComponent } from './data/data.component';\nimport { MailComponent } from './mail/mail.component';\nimport { HomeComponent } from './home/home.component';\nimport { ConfigComponent } from './config/config.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { CanDeactivateGuard } from './can-deactivate-guard.service';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { ResetComponent } from './reset/reset.component';\n\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"auth\", pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"register\", component: RegisterComponent },\n  { path: \"forgot\", component: ForgotComponent },\n  { path: \"reset/:token\", component: ResetComponent },\n  { path: \"auth\", component: AuthComponent, canActivate: [AuthGuard] },\n  { path: \"home\", \n    component: HomeComponent, \n    canActivate: [AuthGuard],\n    children: [\n      { path: \"config\", component: ConfigComponent },\n      { path: \"data\", component: DataComponent },\n      { path: \"mail\", component: MailComponent, canDeactivate: [CanDeactivateGuard] },\n      { path: \"contact\", component: ContactComponent }\n    ]\n  },\n  { path: \"**\", redirectTo: \"auth\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [CanDeactivateGuard]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { user } from '../user';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { OverlaySpinnerService } from '../overlay-spinner.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user: user = {\n    email: \"\",\n    password: \"\",\n    seller_partner_id: \"\",\n    refresh_token: \"\",\n    access_token: \"\"\n  };\n  form!: FormGroup;\n  emailControl = new FormControl(null, [\n    Validators.required,\n    Validators.email\n  ]);\n  passwordControl = new FormControl(null, Validators.required);\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    private overlaySpinnerService: OverlaySpinnerService,\n    private toastrService: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      email: this.emailControl,\n      password: this.passwordControl\n    });\n  }\n\n  onSubmit() {\n    this.overlaySpinnerService.attach();\n    //console.log(this.form.value);\n    this.user.email = this.form.get('email')?.value; \n    this.user.password = this.form.get('password')?.value;\n    this.authService.login(this.user)\n    .subscribe(result => {\n      if(result)\n      {\n        this.overlaySpinnerService.detach();\n        this.router.navigate(['auth']);\n      }\n      else\n      {\n        this.loginFailed();\n      }\n    });\n  }\n\n  loginFailed(): void {\n    this.overlaySpinnerService.detach();\n    this.toastrService.error('正しいメールアドレスとパスワードを入力してください', 'ログイン失敗', { positionClass: 'toast-bottom-center', timeOut: 5000, closeButton: true});\n    //this.form.reset();\n  }\n\n\n}","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <mat-card class=\"box\">\n      <p class=\"img_logo\">\n        <img src=\"https://res.cloudinary.com/dctfqlyj9/image/upload/v1643959198/icons8-starfish-96_gzopmn.png\"/>\n      </p>\n      <mat-card-header>\n        <mat-card-title>楽コメ</mat-card-title>\n        <mat-card-subtitle>～RakuComeRakuCome～</mat-card-subtitle>\n      </mat-card-header>\n  \n      <form class=\"example-form\" [formGroup]=\"form\" novalidate (ngSubmit)=\"onSubmit()\">\n        <mat-card-content>\n          <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"メールアドレス\" type=\"email\" name=\"email\" formControlName=\"email\">\n            <mat-error *ngIf=\"emailControl.hasError('required') || emailControl.hasError('email')\">\n                <strong>メールアドレスを入力してください</strong>\n            </mat-error>\n          </mat-form-field>\n  \n          <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"パスワード\" type=\"password\" name=\"password\" formControlName=\"password\" autocomplete=\"off\">\n            <mat-error *ngIf=\"passwordControl.hasError('required')\">\n                <strong>パスワードを入力してください</strong>\n            </mat-error>\n          </mat-form-field>\n        </mat-card-content>\n        <span fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n          <a mat-button routerLink=\"/register\" routerLinkActive=\"active\">新規登録</a>\n          <button mat-raised-button color=\"accent\" type=\"submit\" [disabled]=\"form.invalid\">ログイン</button>\n        </span>\n        <!--<a routerLink=\"/forgot\">パスワードを再発行する</a>-->\n      </form>\n      <mat-card-footer class=\"card-footer\">\n        <span fxFlexOffset=\"auto\">\n          <a mat-button routerLink=\"/forgot\">パスワードを再発行</a>\n        </span>\n      </mat-card-footer>\n    </mat-card>\n    \n  </div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n\n  canDeactivate(component: CanComponentDeactivate, \n  route: ActivatedRouteSnapshot, \n  state: RouterStateSnapshot) {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n}","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}